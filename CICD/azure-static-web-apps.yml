name: NextJS SSR CI/CD

trigger:
  branches:
    include:
      - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: artifactName
    value: 'nextjsapp_$(Build.BuildId)'
  - name: baseVersion
    value: '1.0.0'
  - name: buildVersion
    value: '$(baseVersion)-build-$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build and Package Next.js App'
  jobs:
    - job: BuildJob
      displayName: 'Build Job'
      timeoutInMinutes: 60
      steps:
        - checkout: self
          submodules: true

        - task: UseNode@1
          displayName: 'Use Node.js 18'
          inputs:
            version: '18.x'

        - script: |
            npm install
          displayName: 'Install dependencies'

        - script: |
            npm run build
          displayName: 'Build Next.js App'

        - task: ArchiveFiles@2
          displayName: 'Archive Build Output'
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(artifactName).zip'
            replaceExistingArchive: true

        - task: PublishPipelineArtifact@1
          displayName: 'Publish Build Artifact'
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifact: $(artifactName)

- stage: DeployDev
  displayName: 'Deploy to Dev App Service'
  dependsOn: Build
  variables:
    - group: Dev-Variables
  jobs:
    - deployment: DeployDevJob
      environment: 'development'
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: $(artifactName)

              - task: AzureWebApp@1
                displayName: 'Deploy to Azure App Service (Dev)'
                inputs:
                  azureSubscription: 'Azure_Development'
                  appType: 'webAppLinux'
                  appName: 'your-dev-app-service-name'
                  package: '$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip'
                  runtimeStack: 'NODE|18-lts'

              - script: |
                  curl -H "Content-Type: application/json" \
                       -d "{\"text\":\"âœ… DEV Deploy Complete!\\nBuild ID: $(Build.BuildId)\\nVersion: $(buildVersion)\\nCommit: $(Build.SourceVersion)\"}" \
                       "https://levelupyourdata.webhook.office.com/webhookb2/..."
                displayName: 'Notify Teams - Dev Deployment'

- stage: DeployProd
  displayName: 'Deploy to Prod App Service'
  dependsOn: DeployDev
  condition: succeeded()
  variables:
    - group: Prd-Variables
  jobs:
    - deployment: DeployProdJob
      environment: 'production'
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: $(artifactName)

              - task: AzureWebApp@1
                displayName: 'Deploy to Azure App Service (Prod)'
                inputs:
                  azureSubscription: 'Azure_Production'
                  appType: 'webAppLinux'
                  appName: 'your-prod-app-service-name'
                  package: '$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip'
                  runtimeStack: 'NODE|18-lts'

              - script: |
                  curl -H "Content-Type: application/json" \
                       -d "{\"text\":\"ðŸš€ PROD Deploy Complete!\\nBuild ID: $(Build.BuildId)\\nVersion: $(buildVersion)\\nCommit: $(Build.SourceVersion)\"}" \
                       "https://levelupyourdata.webhook.office.com/webhookb2/..."
                displayName: 'Notify Teams - Prod Deployment'
